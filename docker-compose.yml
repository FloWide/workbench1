version: '2'
services:
  postgresql:
    image: postgres:$POSTGRESQL_VERSION
    container_name: keycloak-postgres
    restart: unless-stopped
    volumes:
      - '$POSTGRESQL_HOME:/var/lib/postgresql/data'
    environment:
      - POSTGRES_USER=$POSTGRESQL_USERNAME
      - POSTGRES_PASSWORD=$POSTGRESQL_PASSWORD
      - POSTGRES_DB=$POSTGRESQL_DATABASE
    networks:
      deployment:
        ipv4_address: 10.20.20.10
  keycloak:
    image: docker.io/bitnami/keycloak:$KEYCLOAK_VERSION
    container_name: keycloak
    restart: unless-stopped
    depends_on:
      - postgresql
    environment:
      KEYCLOAK_DATABASE_NAME: $POSTGRESQL_DATABASE
      KEYCLOAK_DATABASE_USER: $POSTGRESQL_USERNAME
      KEYCLOAK_DATABASE_PASSWORD: $POSTGRESQL_PASSWORD
      KC_HOSTNAME_STRICT: "false"
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USER}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      NGINX_LOCATION: /auth
      KC_HTTP_RELATIVE_PATH: /auth
      KC_HTTP_PORT: 80
      KC_HOSTNAME: ${SERVER}-gw.${DOMAIN}
      KC_HEALTH_ENABLED: true
      KEYCLOAK_PROXY: edge
      KEYCLOAK_PRODUCTION: true
      NGINX_LOCATION_CONFIG: |
        proxy_set_header  X-Forwarded-Proto $$scheme;
    volumes:
      - ./keycloak/fw_keycloak:/opt/bitnami/keycloak/themes/fw_keycloak
    healthcheck:
      test: ["CMD", "curl","-f","http://localhost/auth/health"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      deployment:
        ipv4_address: 10.20.20.11
    expose:
      - 80
  keycloak-config:
    image: bitnami/keycloak-config-cli:$KEYCLOAK_CONFIG_VERSION
    container_name: keycloak-config
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      - KEYCLOAK_URL= http://keycloak/auth
      - KEYCLOAK_USER=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KEYCLOAK_AVAILABILITYCHECK_ENABLED=true
      - KEYCLOAK_AVAILABILITYCHECK_TIMEOUT=120s
      - IMPORT_FILES_LOCATIONS=/config/realm.yaml
      - IMPORT_VAR-SUBSTITUTION_ENABLED=true
      - APPS_ADMIN_PASSWORD=${APPS_ADMIN_PASSWORD}
      - SERVER=${SERVER}
      - DOMAIN=${DOMAIN}
    volumes:
      - ./keycloak:/config
    networks:
      deployment:
        ipv4_address: 10.20.20.12
  gitlab:
    container_name: gitlab
    build:
      context: ./gitlab
      args:
        GITLAB_VERSION: $GITLAB_VERSION
        HTTP_PROXY: $HTTP_PROXY
        HTTPS_PROXY: $HTTPS_PROXY
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
      keycloak-config:
        condition: service_completed_successfully
    volumes:
      - '$GITLAB_HOME/config:/etc/gitlab'
      - '$GITLAB_HOME/logs:/var/log/gitlab'
      - '$GITLAB_HOME/data:/var/opt/gitlab'
    environment:
      - VIRTUAL_HOST=${SERVER}-gitlab
      - KEYCLOAK_URL=http://keycloak/auth
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - SERVER=${SERVER}
      - DOMAIN=${DOMAIN}
      - ADMIN_ACCESS_TOKEN=${GITLAB_ADMIN_ACCESS_TOKEN}
      - ROOT_PASSWORD=${GITLAB_ROOT_PASSWORD}
      - SYSTEM_HOOK_URL=${GITLAB_SYSTEM_HOOK_URL}
      - SYSTEM_HOOK_SECRET=${GITLAB_SYSTEM_HOOK_SECRET}
    shm_size: '256m'
    networks:
      deployment:
        ipv4_address: 10.20.20.13
  openresty:
    # image: openresty/openresty
    build: 
      context: ./openresty
      args:
        - HTTP_PROXY=$HTTP_PROXY
        - HTTPS_PROXY=$HTTPS_PROXY
    container_name: openresty
    depends_on:
      keycloak:
        condition: service_healthy
      keycloak-config:
        condition: service_completed_successfully
    environment:
      - KEYCLOAK_URL=http://keycloak/auth
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - SERVER=${SERVER}
      - DOMAIN=${DOMAIN}
    restart: unless-stopped
    devices:
      - "/dev/net/tun:/dev/net/tun"
    ports:
      - "443:443"
      - "80:80"
      - "1195:1195"
    volumes:
      - /etc/openresty/conf.d
      - ./openresty/nginx.conf:/etc/openresty/nginx.conf
      - $SSL_CERT_PATH:/etc/openresty/cert.pem
      - $SSL_KEY_PATH:/etc/openresty/key.pem
      - $OPENRESTY_PUBLIC_HTTP:/var/www/html
      - $BDCL_VPN_KEY:/etc/openvpn/openvpn.key
    cap_add:
      - "NET_ADMIN"
    networks:
      deployment:
        ipv4_address: 10.20.20.14
  dockergen:
    image: nginxproxy/docker-gen
    restart: unless-stopped
    container_name: docker-gen
    depends_on:
      openresty:
        condition: service_started
    command: -notify-sighup openresty -watch /etc/docker-gen/templates/nginx.tmpl
      /etc/openresty/conf.d/default.conf
    volumes_from:
      - openresty
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./openresty/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl
    environment:
      - SERVER=${SERVER}
      - DOMAIN=${DOMAIN}
      - USE_AUTH=${USE_AUTH}
    networks:
      deployment:
        ipv4_address: 10.20.20.15
  dcm:
    container_name: dcm
    restart: unless-stopped
    build:
      context: ./dcm
      args:
        DCM_VERSION: $DCM_VERSION
        HTTP_PROXY: $HTTP_PROXY
        HTTPS_PROXY: $HTTPS_PROXY
    volumes:
      - $DCM_HOME:/usr/dcm
      - $SHARED_FILES:/data/shared_files
    environment:
      NGINX_LOCATION: /v2
      DCM_LOG_LEVEL: $DCM_LOG_LEVEL
      DCM_SAVE_INTERVAL: $DCM_SAVE_INTERVAL
      DCM_KEEP_INTERVAL: $DCM_KEEP_INTERVAL
      DCM_TRANSLATOR_MODULES: $DCM_TRANSLATOR_MODULES
      WEBHOOK_URL: $DCM_INIT_WEBHOOK_URL
      WEBHOOK_SECRET: $SCRIPT_HANDLER_WEBHOOK_SECRET
      NGINX_LOCATION_CONFIG: |
        proxy_set_header  X-Forwarded-Proto http;
      USE_AUTH: ${USE_AUTH}
    networks:
      deployment:
        ipv4_address: 10.20.20.16
  script_handler:
    container_name: script_handler
    restart: unless-stopped
    depends_on: 
      keycloak:
        condition: service_healthy
      keycloak-config:
        condition: service_completed_successfully
      gitlab:
        condition: service_healthy
    build:
      context: ./script_handler
      args:
        SCRIPT_HANDLER_VERSION: $SCRIPT_HANDLER_VERSION
        HTTP_PROXY: $HTTP_PROXY
        HTTPS_PROXY: $HTTPS_PROXY
    environment:
      NGINX_LOCATION: /workbench-api
      NGINX_LOCATION_CONFIG: |
        rewrite /workbench-api/(.*) /$$1  break;
        rewrite /workbench-api /  break;
        proxy_set_header  X-Forwarded-Proto $$scheme;
      GITLAB_URL: http://gitlab:80
      GITLAB_ADMIN_TOKEN: ${GITLAB_ADMIN_ACCESS_TOKEN}
      KEYCLOAK_URL: http://keycloak/auth
      SERVER: ${SERVER}
      DOMAIN: ${DOMAIN}
      SCRIPT_HANDLER_LOG_LEVEL: $SCRIPT_HANDLER_LOG_LEVEL
      GITLAB_SYSTEM_HOOK_SECRET: ${GITLAB_SYSTEM_HOOK_SECRET}
      WEBHOOK_SECRET: ${SCRIPT_HANDLER_WEBHOOK_SECRET}
    volumes:
      - $SCRIPT_HANDLER_HOME/repos:/data/script_handler/repos
      - $SCRIPT_HANDLER_HOME/releases:/data/script_handler/releases
      - $SHARED_FILES:/data/shared_files
      - $OPENRESTY_PUBLIC_HTTP:/data/public_http
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/run/postgresql:/var/run/postgresql
    networks:
      deployment:
        ipv4_address: 10.20.20.17
  workbench:
    container_name: workbench
    restart: unless-stopped
    depends_on:
      script_handler:
        condition: service_healthy
    build:
      context: ./workbench
      args:
        SERVER: ${SERVER}
        DOMAIN: ${DOMAIN}
        WORKBENCH_VERSION: $WORKBENCH_VERSION
        HTTP_PROXY: $HTTP_PROXY
        HTTPS_PROXY: $HTTPS_PROXY
    environment:
      NGINX_LOCATION: /workbench
      NGINX_LOCATION_CONFIG: |
        rewrite /workbench/(.*) /$$1  break;
        rewrite /workbench /  break;
        proxy_set_header  X-Forwarded-Proto $$scheme;
    networks:
      deployment:
        ipv4_address: 10.20.20.18
    expose:
      - 80
  bdcl:
    container_name: bdcl
    restart: unless-stopped
    build:
      context: ./bdcl
      args:
        BDCL_VERSION: ${BDCL_VERSION}
        HTTP_PROXY: $HTTP_PROXY
        HTTPS_PROXY: $HTTPS_PROXY
    devices:
      - "/dev/net/tun:/dev/net/tun"
    cap_add:
      - "NET_ADMIN"
    volumes:
      - "$BDCL_VPN_KEY:/etc/openvpn/openvpn.key"
    ports:
      - "1194:1194"
    environment:
      BDCL_LOG_LEVEL: ${BDCL_LOG_LEVEL}
    networks:
      deployment:
        ipv4_address: 10.20.20.19

  scl:
    container_name: scl
    restart: unless-stopped
    depends_on:
      - bdcl
    build:
      context: ./scl
      args:
        SCL_VERSION: ${SCL_VERSION}
        HTTP_PROXY: $HTTP_PROXY
        HTTPS_PROXY: $HTTPS_PROXY
    environment:
      WEBHOOK_URL: $SCL_INIT_WEBHOOK_URL
      WEBHOOK_SECRET: $SCRIPT_HANDLER_WEBHOOK_SECRET
      SCL_NO_POSITION_TIMEOUT: 120000
    networks:
      deployment:
        ipv4_address: 10.20.20.20
    expose:
      - 80

  autoheal:
    container_name: autoheal
    image: willfarrell/autoheal
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      AUTOHEAL_CONTAINER_LABEL: all
      AUTOHEAL_START_PERIOD: 60
      AUTOHEAL_INTERVAL: 60
    networks:
      deployment:
        ipv4_address: 10.20.20.21

networks:
  deployment:
    name: workbench-network
    driver: bridge
    ipam:
      config:
        - subnet: 10.20.20.0/24
          gateway: 10.20.20.254
