server {
	listen 80 default_server;
	server_name {{.Env.SERVER}}-gw.{{.Env.DOMAIN}};
	return 301 https://$server_name$request_uri;
}


server {
    listen 443 ssl;
    client_max_body_size 200m;
    ssl_certificate /etc/openresty/cert.pem;
    ssl_certificate_key /etc/openresty/key.pem;

    server_name {{$.Env.SERVER}}-gw.{{$.Env.DOMAIN}};

    set $session_cipher none;                 # don't need to encrypt the session content, it's an opaque identifier
    set $session_storage shm;                 # use shared memory
    set $session_cookie_persistent on;        # persist cookie between browser sessions
    set $session_cookie_renew      3600;      # new cookie every hour
    set $session_cookie_lifetime   86400;     # lifetime for persistent cookies
    set $session_name              sess_auth; # name of the cookie to store the session identifier in

    set $session_shm_store         sessions;  # name of the dict to store sessions in
    # See https://github.com/bungle/lua-resty-session#shared-dictionary-storage-adapter for the following options
    set $session_shm_uselocking    off;
    set $session_shm_lock_exptime  3;
    set $session_shm_lock_timeout  2;
    set $session_shm_lock_step     0.001;
    set $session_shm_lock_ratio    1;
    set $session_shm_lock_max_step 0.5;

    error_page 502 /502.html;
    location = /502.html {
        alias /etc/openresty/error/502.html;
    }

    location = /auth_callback {
        access_by_lua_file "/etc/openresty/auth/auth.lua";
    }

    location /scl-edge {
      rewrite /scl-edge/(.*) /$1  break;
      rewrite /scl-edge /  break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto http;
      proxy_pass http://10.181.240.10:11011;
      add_header Access-Control-Allow-Origin "*";
      add_header Access-Control-Allow-Methods "*";      
    }

    location /bdcl-edge {
      rewrite /bdcl-edge/(.*) /$1  break;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header  X-Forwarded-Proto http;
      proxy_pass http://10.181.240.10:11113;
    }


    {{ range $host, $containers := groupByMulti $ "Env.NGINX_LOCATION" "," }}
        {{ range $index, $container := $containers }}
        location {{$container.Env.NGINX_LOCATION}} {
            {{ $addrLen := len $container.Addresses }}
            {{ $network := index $container.Networks 0 }}

            {{if $container.Env.NGINX_LOCATION_CONFIG}}
            {{$container.Env.NGINX_LOCATION_CONFIG}}
            {{end}}

            {{ if parseBool (or $container.Env.USE_AUTH "False") }}
                access_by_lua_file "/etc/openresty/auth/iframe_auth.lua";
            {{ end }}

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            {{ if eq $addrLen 1 }}
                {{ with $address := index $container.Addresses 0 }}
            # {{$container.Name}}
            proxy_pass http://{{ $network.IP }}:{{ $address.Port }};
                {{ end }}

            {{/* If more than one port exposed, use the one matching VIRTUAL_PORT env var */}}
            {{ else if $container.Env.VIRTUAL_PORT }}
            {{ range $i, $address := $container.Addresses }}
                {{ if eq $address.Port $container.Env.VIRTUAL_PORT }}
            # {{$container.Name}}
            proxy_pass http://{{ $network.IP }}:{{ $address.Port }};
                {{ end }}
            {{ end }}

            {{/* Else default to standard web port 80 */}}
        {{ else }}
            {{ range $i, $address := $container.Addresses }}
                {{ if eq $address.Port "80" }}
            # {{$container.Name}}
            proxy_pass http://{{ $network.IP }}:{{ $address.Port }};
                {{ end }}
            {{ end }}
        {{ end }}

        }

        {{end}}

    {{ end }}

    location /streamlit-cloud { # this is temporary until dockerization of running
        {{ if parseBool ($.Env.USE_AUTH) }}
        access_by_lua_file "/etc/openresty/auth/iframe_auth.lua";
        {{ end }}
        rewrite /streamlit-cloud/([0-9]+)/(.*) /$2  break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto http;
        
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "*";
        add_header X-Frame-Options "SAMEORIGIN";
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

    {{ range $name, $containers := groupByMulti $ "Name" "," }}
        {{if eq $name "script_handler"}}
        {{ $container := index $containers 0 }}
        {{ $network := index $container.Networks 0 }}

        proxy_pass http://{{ $network.IP }}:$1;
        {{end}}

    {{end}}

    }

    location /public {
        {{ if parseBool ($.Env.USE_AUTH) }}
        access_by_lua_file "/etc/openresty/auth/auth.lua";
        {{ end }}
        alias /var/www/html;
        autoindex on;
    }

    location / {
        return 301 /workbench;
    }
}


{{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}
upstream {{ $host }} {

{{ range $index, $value := $containers }}

	{{ $addrLen := len $value.Addresses }}
	{{ $network := index $value.Networks 0 }}
	
	{{/* If only 1 port exposed, use that */}}
	{{ if eq $addrLen 1 }}
		{{ with $address := index $value.Addresses 0 }}
			# {{$value.Name}}
			server {{ $network.IP }}:{{ $address.Port }};
		{{ end }}

	{{/* If more than one port exposed, use the one matching VIRTUAL_PORT env var */}}
	{{ else if $value.Env.VIRTUAL_PORT }}
		{{ range $i, $address := $value.Addresses }}
			{{ if eq $address.Port $value.Env.VIRTUAL_PORT }}
			# {{$value.Name}}
			server {{ $network.IP }}:{{ $address.Port }};
			{{ end }}
		{{ end }}

	{{/* Else default to standard web port 80 */}}
	{{ else }}
		{{ range $i, $address := $value.Addresses }}
			{{ if eq $address.Port "80" }}
			# {{$value.Name}}
			server {{ $network.IP }}:{{ $address.Port }};
			{{ end }}
		{{ end }}
	{{ end }}
{{ end }}

}
server {
    listen 443 ssl;
    client_max_body_size 200m;
    ssl_certificate /etc/openresty/cert.pem;
    ssl_certificate_key /etc/openresty/key.pem;

	server_name {{$host}}.{{$.Env.DOMAIN}};

	location / {
        proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_pass http://{{ trim $host }};
	}
}
{{ end }}
